// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: plans.proto

package plans

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plans_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_plans_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_plans_proto_rawDescGZIP(), []int{0}
}

type ViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ViewRequest) Reset() {
	*x = ViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plans_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewRequest) ProtoMessage() {}

func (x *ViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plans_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewRequest.ProtoReflect.Descriptor instead.
func (*ViewRequest) Descriptor() ([]byte, []int) {
	return file_plans_proto_rawDescGZIP(), []int{1}
}

func (x *ViewRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plans_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plans_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_plans_proto_rawDescGZIP(), []int{2}
}

func (x *SearchRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	External_Plans []*ExternalPlan `protobuf:"bytes,1,rep,name=external_Plans,json=externalPlans,proto3" json:"external_Plans,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plans_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plans_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_plans_proto_rawDescGZIP(), []int{3}
}

func (x *SearchResponse) GetExternal_Plans() []*ExternalPlan {
	if x != nil {
		return x.External_Plans
	}
	return nil
}

type ExternalPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OriginId    string   `protobuf:"bytes,2,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
	Title       string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Page        string   `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
	Formats     []string `protobuf:"bytes,6,rep,name=formats,proto3" json:"formats,omitempty"`
	Writers     []string `protobuf:"bytes,7,rep,name=writers,proto3" json:"writers,omitempty"`
	Grades      []string `protobuf:"bytes,8,rep,name=grades,proto3" json:"grades,omitempty"`
	Subjects    []string `protobuf:"bytes,9,rep,name=subjects,proto3" json:"subjects,omitempty"`
	Tags        []string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	Img         string   `protobuf:"bytes,11,opt,name=img,proto3" json:"img,omitempty"`
	Removed     bool     `protobuf:"varint,12,opt,name=removed,proto3" json:"removed,omitempty"`
}

func (x *ExternalPlan) Reset() {
	*x = ExternalPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plans_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalPlan) ProtoMessage() {}

func (x *ExternalPlan) ProtoReflect() protoreflect.Message {
	mi := &file_plans_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalPlan.ProtoReflect.Descriptor instead.
func (*ExternalPlan) Descriptor() ([]byte, []int) {
	return file_plans_proto_rawDescGZIP(), []int{4}
}

func (x *ExternalPlan) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExternalPlan) GetOriginId() string {
	if x != nil {
		return x.OriginId
	}
	return ""
}

func (x *ExternalPlan) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExternalPlan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExternalPlan) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *ExternalPlan) GetFormats() []string {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *ExternalPlan) GetWriters() []string {
	if x != nil {
		return x.Writers
	}
	return nil
}

func (x *ExternalPlan) GetGrades() []string {
	if x != nil {
		return x.Grades
	}
	return nil
}

func (x *ExternalPlan) GetSubjects() []string {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *ExternalPlan) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ExternalPlan) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *ExternalPlan) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

var File_plans_proto protoreflect.FileDescriptor

var file_plans_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x0a, 0x0b, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x46, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0xaf, 0x02, 0x0a, 0x0c, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x32, 0x53, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x6e, 0x73, 0x52, 0x70, 0x63, 0x12, 0x1c, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x0c,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plans_proto_rawDescOnce sync.Once
	file_plans_proto_rawDescData = file_plans_proto_rawDesc
)

func file_plans_proto_rawDescGZIP() []byte {
	file_plans_proto_rawDescOnce.Do(func() {
		file_plans_proto_rawDescData = protoimpl.X.CompressGZIP(file_plans_proto_rawDescData)
	})
	return file_plans_proto_rawDescData
}

var file_plans_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_plans_proto_goTypes = []interface{}{
	(*Empty)(nil),          // 0: Empty
	(*ViewRequest)(nil),    // 1: ViewRequest
	(*SearchRequest)(nil),  // 2: SearchRequest
	(*SearchResponse)(nil), // 3: SearchResponse
	(*ExternalPlan)(nil),   // 4: ExternalPlan
}
var file_plans_proto_depIdxs = []int32{
	4, // 0: SearchResponse.external_Plans:type_name -> ExternalPlan
	1, // 1: PlansRpc.View:input_type -> ViewRequest
	2, // 2: PlansRpc.Search:input_type -> SearchRequest
	0, // 3: PlansRpc.View:output_type -> Empty
	3, // 4: PlansRpc.Search:output_type -> SearchResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_plans_proto_init() }
func file_plans_proto_init() {
	if File_plans_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plans_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plans_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plans_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plans_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plans_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plans_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plans_proto_goTypes,
		DependencyIndexes: file_plans_proto_depIdxs,
		MessageInfos:      file_plans_proto_msgTypes,
	}.Build()
	File_plans_proto = out.File
	file_plans_proto_rawDesc = nil
	file_plans_proto_goTypes = nil
	file_plans_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlansRpcClient is the client API for PlansRpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlansRpcClient interface {
	View(ctx context.Context, in *ViewRequest, opts ...grpc.CallOption) (*Empty, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type plansRpcClient struct {
	cc grpc.ClientConnInterface
}

func NewPlansRpcClient(cc grpc.ClientConnInterface) PlansRpcClient {
	return &plansRpcClient{cc}
}

func (c *plansRpcClient) View(ctx context.Context, in *ViewRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/PlansRpc/View", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *plansRpcClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/PlansRpc/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlansRpcServer is the server API for PlansRpc service.
type PlansRpcServer interface {
	View(context.Context, *ViewRequest) (*Empty, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

// UnimplementedPlansRpcServer can be embedded to have forward compatible implementations.
type UnimplementedPlansRpcServer struct {
}

func (*UnimplementedPlansRpcServer) View(context.Context, *ViewRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method View not implemented")
}
func (*UnimplementedPlansRpcServer) Search(context.Context, *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}

func RegisterPlansRpcServer(s *grpc.Server, srv PlansRpcServer) {
	s.RegisterService(&_PlansRpc_serviceDesc, srv)
}

func _PlansRpc_View_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlansRpcServer).View(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlansRpc/View",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlansRpcServer).View(ctx, req.(*ViewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlansRpc_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlansRpcServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PlansRpc/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlansRpcServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlansRpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PlansRpc",
	HandlerType: (*PlansRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "View",
			Handler:    _PlansRpc_View_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _PlansRpc_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plans.proto",
}
